
- name: Check que es un Centos o RedHat
  hosts: all
  vars:
    OS_redhat:
      - "CentOS"
      - "Red Hat"
      - "Rocky"
    OS_redhat_version:
      - "8.6"
      - "8.7"

  tasks:
    - name: Nos aseguramos que es un SO soportado
      assert:
        that: 
          - ansible_distribution in OS_redhat
          - ansible_distribution_version in OS_redhat_version
        fail_msg: "SO incorrecto {{ ansible_distribution }} {{ ansible_distribution_version }} "
        success_msg: "SO correcto {{ ansible_distribution }} {{ ansible_distribution_version }} "

- name: Comprobamos que todos los host tienen selinux disabled
  hosts: all
  become: yes
  tasks:
  - name: Check SELinux disabled
    selinux:
      state: disabled
- name: Comprobamos parametros de sysctl
  hosts: all
  become: true
  become_method: sudo
  tasks:
  - name: Check con sysctl swappiness = 1
    sysctl:
      name: vm.swappiness
      value: '1'
      state: present
  - name: Check vm.overcommit_memory = 1
    sysctl:
      name: vm.overcommit_memory
      value: '1'
      state: present
      #  - name: Deshabilitamos hugepages en grub
      #check_hugepage:
      #name: grub
      #state: disabled
  - name: Comprobamos interface por defecto
    debug:
      msg: "La interface por defecto es  {{ ansible_default_ipv4['interface'] }}"
  - name: Deshabilitamos IPv6
    sysctl:
      name: "{{ item }}"
      value: '1'
      state: present
    with_items:
     - "net.ipv6.conf.all.disable_ipv6"
     - "net.ipv6.conf.default.disable_ipv6"
     - "net.ipv6.conf.lo.disable_ipv6"
     - "net.ipv6.conf.{{ ansible_default_ipv4['interface'] }}.disable_ipv6"

  - name: Comprobamos estado hugepages defrag y enabled
    include_tasks: hugepages.yml
    loop:
      - defrag
      - enabled

- name: check services and packages
  hosts: all
  become: true
  tasks:
  - name: Quitamos tuned para que no lo active
    systemd:
      name: tuned.service
      state: stopped
      enabled: false
  - name: check /proc/sys/kernel/random/entropy_avail
    shell:
      cmd: "cat /proc/sys/kernel/random/entropy_avail"
    register: entropyout
    changed_when: false
  - name: instalamos rng si es menos de 1000
    yum:
      name: rng-tools
      state: present
    notify:
      check_rng_tools
    when: entropyout.stdout|int < 1000 
  - name: Actualizamos todos los paquetes
    yum:
      name: '*'
      state: latest
  - name: Instalamos NSCD
    yum:
      name: nscd.x86_64
      state: present
  - name: Instalamos NTPD chrony.x86_64
    yum:
      name: chrony.x86_64
      state: present
  - name: Instalamos OpenJDK 1.8
    yum:
      name:
        - java-1.8.0-openjdk.x86_64
        - java-1.8.0-openjdk-devel.x86_64
      state: latest
  - name: Comando ntpstat
    yum:
      name: ntpstat
      state: present
- name: Habilitamos MySQL 8 y JDBC en cmhost
  hosts: main, master
  become: true
  tasks:
  - name: Habilitamos repo de mysql 8 para centos 7
    yum:
      name: https://repo.mysql.com//mysql80-community-release-el7-7.noarch.rpm
      state: present
  - name: Instalamos MySQL 8.0
    yum:
      name: mysql-community-server
      state: present
  - name: Habilitamos conector JDBC 8.0
    yum:
      name: mysql-connector-java
      state: present

- name: Comprobamos que todos los servicios necesarios estan corriendo
  hosts: all
  become: true
  tasks:
  - name: Comprobamos Chrony corriendo
    systemd:
      name: chronyd.service
      state: started
      enabled: true
  - name: Comprobamos que NSCD esta corriendo
    systemd:
      name: nscd.service
      state: started
      enabled: true
- name: Permitimos sudo sin password
  hosts: all
  become: true
  tasks:
  - name: Edito /etc/sudoers
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%wheel\s+ALL\=\(ALL\)'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: /usr/sbin/visudo -cf %s
      backup: true

## mount noatime que no tenga sync
## ensure disable firewald 
## python 2.7
## ulimits nproc https://docs.cloudera.com/cdp-private-cloud-base/7.1.7/installation/topics/cdpdc-os-requirements.html


  handlers:
    - name: check_rng_tools
      systemd:
        name: rngd
        state: started
        enabled: true

